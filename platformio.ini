; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; better example:
; https://github.com/MCUdude/MiniCore/blob/master/PlatformIO.md

[platformio]
default_envs = upload_avrispmkii ; Default build target

[env]
platform = atmelavr
board = atmega168p
framework = arduino
lib_deps = 
	fastled/FastLED@^3.9.13
	lowpowerlab/LowPower_LowPowerLab@^2.2
	sparkfun/SparkFun LIS3DH Arduino Library@^1.0.3

; build_flags = -DDEBUG -v

board_build.mcu = atmega168p

; 1 MHz clock
board_build.f_cpu = 2000000L
;lfuse = 0x62

; 2Mhz clock
;board_build.f_cpu = 8000000L
;lfuse = 0xE2

; Fuse settings for INTERNAL 8MHz oscillator (no CKDIV8)
; board_build.fuses = lfuse=0xE2, hfuse=0xD9, efuse=0xFF
; clock_prescale_set(clock_div_4)

; Fuse settings for INTERNAL 8MHz oscillator WITH CKDIV8 (8MHz รท 8 = 1MHz)
; hfuse=BOD disabled
; efuse=no bootloader
;board_build.fuses = lfuse=0x62, hfuse=0xDF, efuse=0xFF

; doesn't seem to do anything
; board_upload.require_upload_port = no

; note: no BOD

; Disable bootloader
board_build.bootloader.no_bootloader = yes


[env:upload_avrispmkii]
;upload_protocol = avrispmkii

upload_protocol = custom
upload_port = usb
upload_flags =
    -C
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -c
    stk500v2
    -v
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i



; Run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; Run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:fuses_bootloader]

; arduino sets lfuse=0x62 for 1mhz, 0xe2 for 2mhz
; PIO/minicore does not set lfuse based on f_cpu! must manually turn off CKDIV8
board_fuses.lfuse = 0xE2

board_hardware.oscillator = internal ; Oscillator type
board_bootloader.type = no_bootloader       ; urboot, optiboot or no_bootloader
board_bootloader.speed = 115200      ; Bootloader baud rate
board_hardware.uart = no_bootloader          ; Set UART to use for serial upload
board_hardware.bod = disabled            ; Set brown-out detection
board_hardware.eesave = yes          ; Preserve EEPROM when uploading using programmer
board_upload.require_upload_port = no
upload_protocol = avrispmkii
upload_flags =
  -B8

; set -PUSB for serial programmers


[env:native]
; running into this error
; https://community.platformio.org/t/tool-manager-installing-platformio-tool-scons/39251/6
platform = native
board = native_posix
build_type = debug
test_build_project_src = false

framework = c
;build_flags = -Iinclude

lib_deps = Unity